CREATE view [VIW_USERS]
as
select TENANT_ID,SHOP_ID,USER_ID,ACCOUNT,USER_NAME,USER_SPELL,DUTY_IDS,ROLE_IDS,QQ,MM,MSN,PASS_WRD,COMM from CA_USERS
union all
select TENANT_ID,cast(TENANT_ID*10000+1 as varchar(11)) as SHOP_ID,'admin' as USER_ID,'admin' as ACCOUNT,'管理员' as USER_NAME,'gly' as USER_SPELL,'#' as DUTY_IDS,'#' as ROLES_IDS,'' as QQ,'' as MM,'' as MSN,
VALUE as PASS_WRD, '00' as COMM from SYS_DEFINE where DEFINE='PASSWRD' and TENANT_ID<>0
union all
select B.TENANT_ID,cast(B.TENANT_ID*10000+1 as varchar(11)) as SHOP_ID,'system' as USER_ID,'system' as ACCOUNT,'系统用户' as USER_NAME,'xtyf' as USER_SPELL,'#' as DUTY_IDS,'#' as ROLES_IDS,'' as QQ,'' as MM,'' as MSN,
VALUE as PASS_WRD, '00' as COMM from SYS_DEFINE A,CA_TENANT B where DEFINE='PASSWRD' and A.TENANT_ID=0;

--企业经营颜色档案,自经营颜色档案+连接颜色档案

CREATE view [VIW_COLOR_INFO]
as
select 2 as RELATION_FLAG,[TENANT_ID],[COLOR_ID],[SORT_ID7S],[COLOR_NAME],[COLOR_SPELL],[SEQ_NO],[COMM],[TIME_STAMP]
from PUB_COLOR_INFO
union all
select 1 as RELATION_FLAG,C.RELATI_ID as [TENANT_ID],[COLOR_ID],[SORT_ID7S],[COLOR_NAME],[COLOR_SPELL],[SEQ_NO],A.[COMM],A.[TIME_STAMP]
from PUB_COLOR_INFO A,CA_RELATION B,CA_RELATIONS C
where A.TENANT_ID=B.TENANT_ID and B.RELATION_ID=C.RELATION_ID and C.RELATION_STATUS='2' and C.COMM not in ('02','12');

--企业经营尺码档案,自经营尺码档案+连接尺码档案

CREATE view [VIW_SIZE_INFO]
as
select 2 as RELATION_FLAG,[TENANT_ID],[SIZE_ID],[SORT_ID8S],[SIZE_NAME],[SIZE_SPELL],[SEQ_NO],[COMM],[TIME_STAMP]
from PUB_SIZE_INFO
union all
select 1 as RELATION_FLAG,C.RELATI_ID as [TENANT_ID],[SIZE_ID],[SORT_ID8S],[SIZE_NAME],[SIZE_SPELL],[SEQ_NO],A.[COMM],A.[TIME_STAMP]
from PUB_SIZE_INFO A,CA_RELATION B,CA_RELATIONS C
where A.TENANT_ID=B.TENANT_ID and B.RELATION_ID=C.RELATION_ID and C.RELATION_STATUS='2' and C.COMM not in ('02','12');

--企业经营商品分类,自经营分类+连锁分类
CREATE view [VIW_GOODSSORT]
as
select 1 as RELATION_FLAG,B.RELATION_ID,B.RELATION_NAME,C.RELATI_ID as [TENANT_ID],[SORT_ID],A.[LEVEL_ID],[SORT_NAME],[SORT_TYPE],[SORT_SPELL],[SEQ_NO],A.[COMM],A.[TIME_STAMP]
from PUB_GOODSSORT A,CA_RELATION B,CA_RELATIONS C
where A.TENANT_ID=B.TENANT_ID and B.RELATION_ID=C.RELATION_ID and C.RELATION_STATUS='2' and C.COMM not in ('02','12')
union all
select 2 as RELATION_FLAG,0 as RELATION_ID,'自主经营' as RELATION_NAME,[TENANT_ID],[SORT_ID],[LEVEL_ID],[SORT_NAME],[SORT_TYPE],[SORT_SPELL],[SEQ_NO],[COMM],[TIME_STAMP]
from PUB_GOODSSORT;

--企业经营计量单位,自经营计量单位+连接计量单位

CREATE view [VIW_MEAUNITS]
as
select 2 as RELATION_FLAG,[TENANT_ID],[UNIT_ID],[UNIT_NAME],[UNIT_SPELL],[SEQ_NO],[COMM],[TIME_STAMP]
from PUB_MEAUNITS
union all
select 1 as RELATION_FLAG,C.RELATI_ID as [TENANT_ID],[UNIT_ID],[UNIT_NAME],[UNIT_SPELL],[SEQ_NO],A.[COMM],A.[TIME_STAMP]
from PUB_MEAUNITS A,CA_RELATION B,CA_RELATIONS C
where A.TENANT_ID=B.TENANT_ID and B.RELATION_ID=C.RELATION_ID and C.RELATION_STATUS='2' and C.COMM not in ('02','12');

--企业经营商品视图,自经营商品+连锁商品                                              
CREATE view [VIW_GOODSINFO]
as
select 1 as RELATION_FLAG,B.RELATION_ID,C.RELATI_ID as TENANT_ID,A.GODS_ID,ifnull(B.GODS_CODE,A.GODS_CODE) as GODS_CODE,B.GODS_CODE as SECOND_CODE,B.SECOND_ID,ifnull(B.GODS_NAME,A.GODS_NAME) as GODS_NAME,ifnull(B.GODS_SPELL,A.GODS_SPELL) as GODS_SPELL,GODS_TYPE,
       ifnull(B.SORT_ID1,A.SORT_ID1) as SORT_ID1,
       ifnull(B.SORT_ID2,A.SORT_ID2) as SORT_ID2,
       ifnull(B.SORT_ID3,A.SORT_ID3) as SORT_ID3,
       ifnull(B.SORT_ID4,A.SORT_ID4) as SORT_ID4,
       ifnull(B.SORT_ID5,A.SORT_ID5) as SORT_ID5,
       ifnull(B.SORT_ID6,A.SORT_ID6) as SORT_ID6,
       ifnull(B.SORT_ID7,A.SORT_ID7) as SORT_ID7,
       ifnull(B.SORT_ID8,A.SORT_ID8) as SORT_ID8,
       ifnull(B.SORT_ID9,A.SORT_ID9) as SORT_ID9,
       ifnull(B.SORT_ID10,A.SORT_ID10) as SORT_ID10,
       ifnull(B.SORT_ID11,A.SORT_ID11) as SORT_ID11,
       ifnull(B.SORT_ID12,A.SORT_ID12) as SORT_ID12,
       ifnull(B.SORT_ID13,A.SORT_ID13) as SORT_ID13,
       ifnull(B.SORT_ID14,A.SORT_ID14) as SORT_ID14,
       ifnull(B.SORT_ID15,A.SORT_ID15) as SORT_ID15,
       ifnull(B.SORT_ID16,A.SORT_ID16) as SORT_ID16,
       ifnull(B.SORT_ID17,A.SORT_ID17) as SORT_ID17,
       ifnull(B.SORT_ID18,A.SORT_ID18) as SORT_ID18,
       ifnull(B.SORT_ID19,A.SORT_ID19) as SORT_ID19,
       ifnull(B.SORT_ID20,A.SORT_ID20) as SORT_ID20,
       [BARCODE],[UNIT_ID],[CALC_UNITS],[SMALL_UNITS],[BIG_UNITS],[SMALLTO_CALC],[BIGTO_CALC],
       [NEW_INPRICE],[NEW_OUTPRICE],[NEW_LOWPRICE],[USING_BARTER],[BARTER_INTEGRAL],
       [USING_PRICE],[HAS_INTEGRAL],[USING_BATCH_NO],[USING_LOCUS_NO],[REMARK],'#' as PRICE_ID,A.[COMM],A.[TIME_STAMP]
from PUB_GOODSINFO A,PUB_GOODS_RELATION B,CA_RELATIONS C
where A.GODS_ID=B.GODS_ID and B.RELATION_ID=C.RELATION_ID and  
( (B.TENANT_ID=C.TENANT_ID  and C.RELATION_TYPE<>'1')
  or
  (B.TENANT_ID=C.RELATI_ID  and C.RELATION_TYPE='1')
)
and B.COMM not in ('02','12') and C.COMM not in ('02','12') and C.RELATION_STATUS='2'
union all
select 2 as RELATION_FLAG,0 as RELATION_ID,[TENANT_ID],[GODS_ID],[GODS_CODE],[GODS_CODE] as SECOND_CODE,[GODS_ID] as SECOND_ID,[GODS_NAME],[GODS_SPELL],[GODS_TYPE],
       [SORT_ID1],[SORT_ID2],[SORT_ID3],[SORT_ID4],[SORT_ID5],[SORT_ID6],[SORT_ID7],[SORT_ID8],
       [SORT_ID9],[SORT_ID10],[SORT_ID11],[SORT_ID12],[SORT_ID13],[SORT_ID14],[SORT_ID15],[SORT_ID16],
       [SORT_ID17],[SORT_ID18],[SORT_ID19],[SORT_ID20],
       [BARCODE],[UNIT_ID],[CALC_UNITS],[SMALL_UNITS],[BIG_UNITS],[SMALLTO_CALC],[BIGTO_CALC],
       [NEW_INPRICE],[NEW_OUTPRICE],[NEW_LOWPRICE],[USING_BARTER],[BARTER_INTEGRAL],
       [USING_PRICE],[HAS_INTEGRAL],[USING_BATCH_NO],[USING_LOCUS_NO],[REMARK],'#' as PRICE_ID,[COMM],[TIME_STAMP]
from PUB_GOODSINFO;


--企业经营条码表,自经营计量单位+连锁计量单位
CREATE view [VIW_BARCODE]
as
select 2 as RELATION_FLAG,[TENANT_ID],[ROWS_ID],[GODS_ID],[PROPERTY_01],[PROPERTY_02],[UNIT_ID],[BARCODE_TYPE],[BATCH_NO],[BARCODE],[COMM],[TIME_STAMP]
from PUB_BARCODE
union all
select 1 as RELATION_FLAG,C.RELATI_ID as TENANT_ID,D.[ROWS_ID],D.[GODS_ID],[PROPERTY_01],[PROPERTY_02],D.[UNIT_ID],[BARCODE_TYPE],[BATCH_NO],D.[BARCODE],D.[COMM],D.[TIME_STAMP]
from PUB_GOODSINFO A,PUB_GOODS_RELATION B,CA_RELATIONS C,PUB_BARCODE D
where A.GODS_ID=B.GODS_ID and B.RELATION_ID=C.RELATION_ID and  
( (B.TENANT_ID=C.TENANT_ID  and C.RELATION_TYPE<>'1')
  or
  (B.TENANT_ID=C.RELATI_ID  and C.RELATION_TYPE='1')
)
and B.COMM not in ('02','12') and C.COMM not in ('02','12') and C.RELATION_STATUS='2'
and A.TENANT_ID=D.TENANT_ID and A.GODS_ID=D.GODS_ID;



--供应商+我的供应商+我的经销商
CREATE VIEW VIW_CLIENTINFO
as
select 0 as FLAG,[TENANT_ID],[CLIENT_ID],[LICENSE_CODE],[CLIENT_TYPE],[CLIENT_CODE],[CLIENT_NAME],[CLIENT_SPELL],[SORT_ID],[REGION_ID],[SETTLE_CODE],[ADDRESS],[POSTALCODE],[LINKMAN],[TELEPHONE3],[TELEPHONE1],[TELEPHONE2],[FAXES],[HOMEPAGE],[EMAIL],[QQ],[MSN],
[BANK_ID],[ACCOUNT],[INVOICE_FLAG],[REMARK],[TAX_RATE],[PRICE_ID],[SHOP_ID],null IC_CARDNO,[COMM],[TIME_STAMP] from PUB_CLIENTINFO where CLIENT_TYPE in ('0','1')
union all
select 1 as FLAG,B.[RELATI_ID] as TENANT_ID,cast(A.[TENANT_ID] as varchar(36)) as CLIENT_ID,A.LICENSE_CODE,'1' as CLIENT_TYPE,A.LOGIN_NAME as CLIENT_CODE,A.TENANT_NAME as CLIENT_NAME,A.TENANT_SPELL as CLIENT_SPELL,
'----' as [SORT_ID],A.[REGION_ID],'#' as SETTLE_CODE,A.[ADDRESS],A.[POSTALCODE],A.[LINKMAN],A.TELEPHONE as TELEPHONE3,A.TELEPHONE as TELEPHONE1,A.TELEPHONE as TELEPHONE2,
A.[FAXES],A.[HOMEPAGE],null as EMAIL,A.QQ,A.MSN,null as BANK_ID,null as ACCOUNT,'0' as INVOICE_FLAG,A.[REMARK],0 as TAX_RATE,'#' as PRICE_ID,'0' as SHOP_ID,null IC_CARDNO,A.[COMM],A.[TIME_STAMP] 
from CA_TENANT A,CA_RELATIONS B where A.TENANT_ID=B.TENANT_ID
union all
select 3 as FLAG,TENANT_ID,cast([TENANT_ID] as varchar(36)) as CLIENT_ID,LICENSE_CODE,'1' as CLIENT_TYPE,LOGIN_NAME as CLIENT_CODE,TENANT_NAME as CLIENT_NAME,TENANT_SPELL as CLIENT_SPELL,
'----' as [SORT_ID],[REGION_ID],'#' as SETTLE_CODE,[ADDRESS],[POSTALCODE],[LINKMAN],TELEPHONE as TELEPHONE3,TELEPHONE as TELEPHONE1,TELEPHONE as TELEPHONE2,
[FAXES],[HOMEPAGE],null as EMAIL,QQ,MSN,null as BANK_ID,null as ACCOUNT,'0' as INVOICE_FLAG,[REMARK],0 as TAX_RATE,'#' as PRICE_ID,'0' as SHOP_ID,null IC_CARDNO,[COMM],[TIME_STAMP] 
from CA_TENANT;

--所有消费者<会员+企业客户>
CREATE VIEW VIW_CUSTOMER
as
select j.*,ic.IC_CARDNO,ic.BALANCE,ic.INTEGRAL,ic.ACCU_INTEGRAL,ic.RULE_INTEGRAL from (
select 0 as FLAG,[TENANT_ID],[CLIENT_ID],[LICENSE_CODE],[CLIENT_TYPE],[CLIENT_CODE],[CLIENT_NAME],[CLIENT_SPELL],[SORT_ID],[REGION_ID],[SETTLE_CODE],[ADDRESS],[POSTALCODE],[LINKMAN],[TELEPHONE3],[TELEPHONE1],[TELEPHONE2],[FAXES],[HOMEPAGE],[EMAIL],[QQ],[MSN],
[BANK_ID],[ACCOUNT],[INVOICE_FLAG],[REMARK],[TAX_RATE],[PRICE_ID],[SHOP_ID],'#' as UNION_ID,[COMM],[TIME_STAMP] from PUB_CLIENTINFO where CLIENT_TYPE in ('0','2')
union all
select 1 as FLAG,B.[TENANT_ID] as TENANT_ID,cast(A.[TENANT_ID] as varchar(36)) as CLIENT_ID,A.LICENSE_CODE,'2' as CLIENT_TYPE,A.LOGIN_NAME as CLIENT_CODE,A.TENANT_NAME as CLIENT_NAME,A.TENANT_SPELL as CLIENT_SPELL,
'----' as [SORT_ID],A.[REGION_ID],'#' as SETTLE_CODE,A.[ADDRESS],A.[POSTALCODE],A.[LINKMAN],A.TELEPHONE as TELEPHONE3,A.TELEPHONE as TELEPHONE1,A.TELEPHONE as TELEPHONE2,
A.[FAXES],A.[HOMEPAGE],null as EMAIL,A.QQ,A.MSN,null as BANK_ID,null as ACCOUNT,'0' as INVOICE_FLAG,A.[REMARK],0 as TAX_RATE,'#' as PRICE_ID,'0' as SHOP_ID,'#' as UNION_ID,A.[COMM],A.[TIME_STAMP] 
from CA_TENANT A,CA_RELATIONS B where A.TENANT_ID=B.RELATI_ID
union all
select 2 as FLAG,[TENANT_ID],[CUST_ID] as CLIENT_ID,ID_NUMBER as [LICENSE_CODE],'2' as CLIENT_TYPE,CUST_CODE as CLIENT_CODE,CUST_NAME as CLIENT_NAME,CUST_SPELL as CLIENT_SPELL,
[SORT_ID],[REGION_ID],'#' as SETTLE_CODE,[FAMI_ADDR] as ADDRESS,[POSTALCODE],CUST_NAME as LINKMAN,FAMI_TELE as TELEPHONE3,OFFI_TELE as TELEPHONE1,MOVE_TELE as TELEPHONE2,
null as FAXES,null as HOMEPAGE,EMAIL,QQ,MSN,null as BANK_ID,null as ACCOUNT,'0' as INVOICE_FLAG,[REMARK],0 as TAX_RATE,PRICE_ID,SHOP_ID,'#' as UNION_ID,[COMM],[TIME_STAMP] 
from PUB_CUSTOMER
union all
select 3 as FLAG,[TENANT_ID],cast([TENANT_ID] as varchar(36)) as CLIENT_ID,LICENSE_CODE,'2' as CLIENT_TYPE,LOGIN_NAME as CLIENT_CODE,TENANT_NAME as CLIENT_NAME,TENANT_SPELL as CLIENT_SPELL,
'----' as [SORT_ID],[REGION_ID],'#' as SETTLE_CODE,[ADDRESS],[POSTALCODE],[LINKMAN],TELEPHONE as TELEPHONE3,TELEPHONE as TELEPHONE1,TELEPHONE as TELEPHONE2,
[FAXES],[HOMEPAGE],null as EMAIL,QQ,MSN,null as BANK_ID,null as ACCOUNT,'0' as INVOICE_FLAG,[REMARK],0 as TAX_RATE,'#' as PRICE_ID,'0' as SHOP_ID,'#' as UNION_ID,[COMM],[TIME_STAMP] 
from CA_TENANT) j left outer join PUB_IC_INFO ic on j.TENANT_ID=ic.TENANT_ID and j.CLIENT_ID=ic.CLIENT_ID and j.UNION_ID=ic.UNION_ID;


--各商品在企业总部的价格<售价>，不分门店
CREATE view [VIW_GOODSINFOEXT]
as
select A.[TENANT_ID],A.[RELATION_ID],
       A.PRICE_ID,A.[GODS_ID],A.[GODS_CODE],A.[GODS_ID] as SECOND_ID,A.[GODS_NAME],A.[GODS_SPELL],A.[GODS_TYPE],
       A.[SORT_ID1],A.[SORT_ID2],A.[SORT_ID3],A.[SORT_ID4],A.[SORT_ID5],A.[SORT_ID6],A.[SORT_ID7],A.[SORT_ID8],
       A.[SORT_ID9],A.[SORT_ID10],A.[SORT_ID11],A.[SORT_ID12],A.[SORT_ID13],A.[SORT_ID14],A.[SORT_ID15],A.[SORT_ID16],
       A.[SORT_ID17],A.[SORT_ID18],A.[SORT_ID19],A.[SORT_ID20],
       A.[BARCODE],A.[UNIT_ID],A.[CALC_UNITS],A.[SMALL_UNITS],A.[BIG_UNITS],A.[SMALLTO_CALC],A.[BIGTO_CALC],A.[NEW_INPRICE],A.[NEW_OUTPRICE] as RTL_OUTPRICE,
       1 as POLICY_TYPE,
       case when ifnull(B.COMM,'02') not in ('02','12') then B.[NEW_OUTPRICE] else A.[NEW_OUTPRICE] end NEW_OUTPRICE,
       case when ifnull(B.COMM,'02') not in ('02','12') then ifnull(B.[NEW_OUTPRICE1],B.[NEW_OUTPRICE]*A.SMALLTO_CALC) else A.[NEW_OUTPRICE]*A.SMALLTO_CALC end NEW_OUTPRICE1,
       case when ifnull(B.COMM,'02') not in ('02','12') then ifnull(B.[NEW_OUTPRICE2],B.[NEW_OUTPRICE]*A.BIGTO_CALC) else A.[NEW_OUTPRICE]*A.BIGTO_CALC end NEW_OUTPRICE2,
       A.[NEW_LOWPRICE],A.[USING_BARTER],A.[BARTER_INTEGRAL],
       A.[USING_PRICE],A.[HAS_INTEGRAL],A.[USING_BATCH_NO],A.[USING_LOCUS_NO],A.[REMARK],A.[COMM],A.[TIME_STAMP]
from VIW_GOODSINFO A left join PUB_GOODSPRICE B ON A.TENANT_ID=B.TENANT_ID and A.GODS_ID=B.GODS_ID and cast(A.TENANT_ID as varchar)||'0001'=B.SHOP_ID and A.PRICE_ID=B.PRICE_ID;

--每个门店都有记录，关联需加门店
--各商品价格
CREATE view [VIW_GOODSPRICE]
as
select A.[TENANT_ID],A.[RELATION_ID],C.SHOP_ID,
       A.PRICE_ID,A.[GODS_ID],A.[GODS_CODE],A.[GODS_ID] as SECOND_ID,A.[GODS_NAME],A.[GODS_SPELL],A.[GODS_TYPE],
       A.[SORT_ID1],A.[SORT_ID2],A.[SORT_ID3],A.[SORT_ID4],A.[SORT_ID5],A.[SORT_ID6],A.[SORT_ID7],A.[SORT_ID8],
       A.[SORT_ID9],A.[SORT_ID10],A.[SORT_ID11],A.[SORT_ID12],A.[SORT_ID13],A.[SORT_ID14],A.[SORT_ID15],A.[SORT_ID16],
       A.[SORT_ID17],A.[SORT_ID18],A.[SORT_ID19],A.[SORT_ID20],
       A.[BARCODE],A.[UNIT_ID],A.[CALC_UNITS],A.[SMALL_UNITS],A.[BIG_UNITS],A.[SMALLTO_CALC],A.[BIGTO_CALC],A.[NEW_INPRICE],A.RTL_OUTPRICE,
       case when ifnull(B.COMM,'02') not in ('02','12') then 2 else 1 end as POLICY_TYPE,
       case when ifnull(B.COMM,'02') not in ('02','12') then B.[NEW_OUTPRICE] else A.[NEW_OUTPRICE] end NEW_OUTPRICE,
       case when ifnull(B.COMM,'02') not in ('02','12') then ifnull(B.[NEW_OUTPRICE1],B.[NEW_OUTPRICE]*A.SMALLTO_CALC) else A.[NEW_OUTPRICE]*A.SMALLTO_CALC end NEW_OUTPRICE1,
       case when ifnull(B.COMM,'02') not in ('02','12') then ifnull(B.[NEW_OUTPRICE2],B.[NEW_OUTPRICE]*A.BIGTO_CALC) else A.[NEW_OUTPRICE]*A.BIGTO_CALC end NEW_OUTPRICE2,
       A.[NEW_LOWPRICE],A.[USING_BARTER],A.[BARTER_INTEGRAL],
       A.[USING_PRICE],A.[HAS_INTEGRAL],A.[USING_BATCH_NO],A.[USING_LOCUS_NO],A.[REMARK],A.[COMM],A.[TIME_STAMP]
from VIW_GOODSINFOEXT A inner join CA_SHOP_INFO C on A.TENANT_ID=C.TENANT_ID
left join PUB_GOODSPRICE B ON C.SHOP_ID=B.SHOP_ID and A.TENANT_ID=B.TENANT_ID and A.GODS_ID=B.GODS_ID and A.PRICE_ID=B.PRICE_ID;

--每个门店都有记录，关联需加门店
CREATE view [VIW_GOODSPRICEEXT]
as
    SELECT 
      j1.TENANT_ID as TENANT_ID,j1.SHOP_ID,j1.RELATION_ID, 
      j1.GODS_ID as GODS_ID,GODS_CODE,BARCODE,GODS_SPELL,GODS_NAME,UNIT_ID,CALC_UNITS,SMALL_UNITS,BIG_UNITS,SMALLTO_CALC,BIGTO_CALC,
       case when J2.NEW_INPRICE is null then J1.NEW_INPRICE else J2.NEW_INPRICE end as NEW_INPRICE,
       case when J2.NEW_INPRICE is null then J1.NEW_INPRICE*J1.SMALLTO_CALC else J2.NEW_INPRICE1 end as NEW_INPRICE1,
       case when J2.NEW_INPRICE is null then J1.NEW_INPRICE*J1.BIGTO_CALC else J2.NEW_INPRICE2 end as NEW_INPRICE2,
       NEW_OUTPRICE,
       NEW_OUTPRICE1,
       NEW_OUTPRICE2,
       NEW_LOWPRICE,
       J1.RTL_OUTPRICE as RTL_OUTPRICE,
       SORT_ID1,SORT_ID2,SORT_ID3,SORT_ID4,SORT_ID5,SORT_ID6,SORT_ID7,SORT_ID8,
       SORT_ID9,SORT_ID10,SORT_ID11,SORT_ID12,SORT_ID13,SORT_ID14,SORT_ID15,SORT_ID16,
       SORT_ID17,SORT_ID18,SORT_ID19,SORT_ID20,
       USING_BARTER,BARTER_INTEGRAL,
       USING_PRICE,HAS_INTEGRAL,USING_BATCH_NO,USING_LOCUS_NO,REMARK,j1.COMM as COMM,j1.TIME_STAMP as TIME_STAMP
    FROM 
      VIW_GOODSPRICE j1 LEFT JOIN 
      PUB_GOODSINFOEXT j2 ON j1.TENANT_ID = j2.TENANT_ID AND j1.GODS_ID = j2.GODS_ID; 
            
--每个门店都有记录，关联需加门店
CREATE view [VIW_GOODSPRICE_SORTEXT]
as
    SELECT 
      j1.*,j2.LEVEL_ID,j2.SORT_NAME
    FROM 
      VIW_GOODSPRICEEXT j1 LEFT JOIN 
      VIW_GOODSSORT j2 ON j1.TENANT_ID = j2.TENANT_ID AND j1.SORT_ID1 = j2.SORT_ID and j1.RELATION_ID=j2.RELATION_ID; 
      
--商品分类视图不分门店
CREATE view [VIW_GOODSINFO_SORTEXT]
as
    SELECT 
      j1.*,j2.LEVEL_ID,j2.SORT_NAME
    FROM 
      VIW_GOODSINFO j1 LEFT JOIN 
      VIW_GOODSSORT j2 ON j1.TENANT_ID = j2.TENANT_ID AND j1.SORT_ID1 = j2.SORT_ID and j1.RELATION_ID=j2.RELATION_ID; 


--各门店促销价格
CREATE view [VIW_PROM_PRICE]
as
select C.SHOP_ID,B.PRICE_ID,A.TENANT_ID,A.GODS_ID,A.NEW_OUTPRICE,A.NEW_OUTPRICE1,A.NEW_OUTPRICE2,A.RATE_OFF,A.AGIO_RATE,A.ISINTEGRAL from SAL_PRICEDATA A,SAL_PRICEORDER B,SAL_PROM_SHOP C
where A.TENANT_ID=B.TENANT_ID and A.PROM_ID=B.PROM_ID and A.TENANT_ID=C.TENANT_ID and A.PROM_ID=C.PROM_ID and B.COMM not in ('02','12') and B.CHK_DATE IS NOT NULL and 
B.BEGIN_DATE<=strftime('%Y-%m-%d %H:%M:%S','now','localtime') and B.END_DATE>=strftime('%Y-%m-%d %H:%M:%S','now','localtime');


--进货单视图<含退货>
CREATE VIEW VIW_STOCKDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.STOCK_ID,B.INVOICE_FLAG,B.STOCK_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,B.STOCK_TYPE,B.CREA_DATE,
   A.CALC_AMOUNT,A.CALC_MONEY,A.AGIO_MONEY,A.AGIO_RATE,A.ORG_PRICE,A.APRICE,A.AMOUNT,B.TAX_RATE,A.ORG_PRICE*A.AMOUNT as STOCK_RTL,
   round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as TAX_MONEY,
   A.CALC_MONEY-round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as NOTAX_MONEY  
from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE in (1,3) and B.COMM not in ('02','12');

--调拨接收单视图
CREATE VIEW VIW_MOVEINDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.STOCK_ID,B.INVOICE_FLAG,B.STOCK_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,B.STOCK_TYPE,B.CREA_DATE,
   A.CALC_AMOUNT,A.CALC_MONEY as COST_MONEY,A.ORG_PRICE*A.AMOUNT as RTL_MONEY,A.AMOUNT,A.APRICE,A.ORG_PRICE
from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE in (2) and B.COMM not in ('02','12');


CREATE VIEW VIW_PAYMENT
as
select B.TENANT_ID,CODE_ID,CODE_NAME,CODE_SPELL,A.COMM,A.TIME_STAMP from PUB_CODE_INFO A,CA_TENANT B where A.TENANT_ID=0 and A.CODE_TYPE='1'
union all
select TENANT_ID,CODE_ID,CODE_NAME,CODE_SPELL,COMM,TIME_STAMP from PUB_CODE_INFO where TENANT_ID>0 and CODE_TYPE='1';


--销售视图<含退货>
CREATE VIEW VIW_SALESDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.CREA_USER,A.CREA_DATE,A.INVOICE_FLAG,B.AGIO_RATE,A.GUIDE_USER,B.POLICY_TYPE,A.SALES_DATE,A.SALES_ID,B.BARTER_INTEGRAL,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.LOCUS_NO,A.INTEGRAL,B.HAS_INTEGRAL,A.SALES_TYPE,A.SALES_STYLE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as CALC_MONEY,B.ORG_PRICE,B.COST_PRICE,B.APRICE,B.AMOUNT,A.TAX_RATE,
  round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as TAX_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as NOTAX_MONEY,
  B.AGIO_MONEY,round(B.CALC_AMOUNT*B.COST_PRICE,2) as COST_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2)-round(B.CALC_AMOUNT*B.COST_PRICE,2) as PRF_MONEY
from SAL_SALESORDER A,SAL_SALESDATA B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and A.SALES_TYPE in (1,3,4) and A.COMM not in ('02','12');

--调拨出货单视图
CREATE VIEW VIW_MOVEOUTDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.CREA_USER,A.INVOICE_FLAG,B.AGIO_RATE,A.GUIDE_USER,B.POLICY_TYPE,A.SALES_DATE,A.SALES_ID,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.LOCUS_NO,A.SALES_TYPE,A.CREA_DATE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as RTL_MONEY,round(B.CALC_AMOUNT*B.COST_PRICE,2) as COST_MONEY,B.APRICE,B.ORG_PRICE,B.COST_PRICE,B.AMOUNT
from SAL_SALESORDER A,SAL_SALESDATA B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and A.SALES_TYPE in (2) and A.COMM not in ('02','12');


CREATE VIEW VIW_CHANGEDATA
as
select
  B.TENANT_ID,B.SHOP_ID,B.CHANGE_DATE,B.CHANGE_TYPE,B.CHANGE_ID,B.CHANGE_CODE,B.DUTY_USER,B.CHK_DATE,A.BATCH_NO,A.LOCUS_NO,A.UNIT_ID,
  A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,B.GLIDE_NO,B.CREA_USER,B.CREA_DATE,A.APRICE,A.COST_PRICE,B.DEPT_ID,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*A.CALC_AMOUNT as CALC_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*A.AMOUNT as AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*A.CALC_MONEY as RTL_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*round(A.CALC_AMOUNT*A.COST_PRICE,2) as COST_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='1' then A.CALC_AMOUNT else 0 end as PARM1_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='1' then A.CALC_MONEY else 0 end as PARM1_RTL,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='1' then round(A.CALC_AMOUNT*A.COST_PRICE,2) else 0 end as PARM1_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='2' then A.CALC_AMOUNT else 0 end as PARM2_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='2' then A.CALC_MONEY else 0 end as PARM2_RTL,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='2' then round(A.CALC_AMOUNT*A.COST_PRICE,2) else 0 end as PARM2_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='3' then A.CALC_AMOUNT else 0 end as PARM3_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='3' then A.CALC_MONEY else 0 end as PARM3_RTL,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='3' then round(A.CALC_AMOUNT*A.COST_PRICE,2) else 0 end as PARM3_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='4' then A.CALC_AMOUNT else 0 end as PARM4_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='4' then A.CALC_MONEY else 0 end as PARM4_RTL,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='4' then round(A.CALC_AMOUNT*A.COST_PRICE,2) else 0 end as PARM4_MONEY,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='5' then A.CALC_AMOUNT else 0 end as PARM5_AMOUNT,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='5' then A.CALC_MONEY else 0 end as PARM5_RTL,
  case when B.CHANGE_TYPE='1' then 1 else -1 end*case when B.CHANGE_CODE='5' then round(A.CALC_AMOUNT*A.COST_PRICE,2) else 0 end as PARM5_MONEY
from STO_CHANGEDATA A,STO_CHANGEORDER B where A.TENANT_ID=B.TENANT_ID and A.CHANGE_ID=B.CHANGE_ID and B.COMM not in ('02','12');


--进货订单视图
CREATE VIEW VIW_STKINDENTDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.INDE_ID,B.INVOICE_FLAG,B.INDE_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,
   A.CALC_AMOUNT,A.CALC_MONEY,A.AGIO_MONEY,A.AGIO_RATE,A.ORG_PRICE,A.AMOUNT,
   round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as TAX_MONEY,
   A.CALC_MONEY-round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as NOTAX_MONEY
from STK_INDENTDATA A,STK_INDENTORDER B where A.TENANT_ID=B.TENANT_ID and A.INDE_ID=B.INDE_ID and B.COMM not in ('02','12');



--销售订单视图
CREATE VIEW VIW_SALINDENTDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.CREA_USER,A.INVOICE_FLAG,A.GUIDE_USER,B.POLICY_TYPE,A.INDE_DATE,A.INDE_ID,B.BARTER_INTEGRAL,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.HAS_INTEGRAL,A.SALES_STYLE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as CALC_MONEY,B.AGIO_RATE,B.ORG_PRICE,B.AMOUNT,
  round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as TAX_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as NOTAX_MONEY,
  B.AGIO_MONEY
from SAL_INDENTORDER A,SAL_INDENTDATA B where A.TENANT_ID=B.TENANT_ID and A.INDE_ID=B.INDE_ID and A.COMM not in ('02','12');

CREATE VIEW VIW_ACCOUNT_INFO
as
select TENANT_ID,SHOP_ID,ACCOUNT_ID,ACCT_NAME,ACCT_SPELL,PAYM_ID,ORG_MNY,OUT_MNY,IN_MNY,BALANCE,COMM,TIME_STAMP from ACC_ACCOUNT_INFO;

CREATE VIEW VIW_PAYDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.PAY_ID,A.ABLE_ID,A.ABLE_TYPE,A.PAY_MNY,B.PAY_DATE,B.CLIENT_ID,B.PAYM_ID,B.ITEM_ID,B.ACCOUNT_ID,B.GLIDE_NO,B.PAY_USER,B.CHK_DATE,B.CHK_USER
from ACC_PAYDATA A,ACC_PAYORDER B where A.TENANT_ID=B.TENANT_ID and A.PAY_ID=B.PAY_ID and B.COMM not in ('02','12');


CREATE VIEW VIW_RECVDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.RECV_ID,A.ABLE_ID,A.RECV_TYPE,A.RECV_MNY,B.RECV_DATE,B.CLIENT_ID,B.PAYM_ID,B.ITEM_ID,B.ACCOUNT_ID,B.GLIDE_NO,B.RECV_USER,B.CHK_DATE,B.CHK_USER
from ACC_RECVDATA A,ACC_RECVORDER B where A.TENANT_ID=B.TENANT_ID and A.RECV_ID=B.RECV_ID and B.COMM not in ('02','12');


--收入支出视图
CREATE VIEW VIW_IORODATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.IORO_ID,A.ACCOUNT_ID,A.IORO_INFO,A.IORO_MNY,B.IORO_DATE,B.CLIENT_ID,B.ITEM_ID,B.DEPT_ID,B.GLIDE_NO,B.IORO_USER,
  IORO_TYPE,PAYM_ID,BILL_NO,REMARK,CHK_USER,CHK_DATE,CREA_USER,CREA_DATE,
  case when B.IORO_TYPE='1' then A.IORO_MNY else 0 end as IN_MONEY,
  case when B.IORO_TYPE='2' then A.IORO_MNY else 0 end as OUT_MONEY
from ACC_IORODATA A,ACC_IOROORDER B where A.TENANT_ID=B.TENANT_ID and A.IORO_ID=B.IORO_ID and B.COMM not in ('02','12');

create view VIW_GOODS_DAYS
as
select TENANT_ID,SHOP_ID,STOCK_ID as ORDER_ID,GLIDE_NO,STOCK_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,10+STOCK_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,CALC_MONEY,
   CALC_AMOUNT as STOCK_AMT,NOTAX_MONEY as STOCK_MNY,TAX_MONEY as STOCK_TAX,CALC_MONEY+AGIO_MONEY as STOCK_RTL,AGIO_MONEY as STOCK_AGO,
   case when STOCK_TYPE=3 then CALC_AMOUNT else 0 end as STKRT_AMT,
   case when STOCK_TYPE=3 then NOTAX_MONEY else 0 end as STKRT_MNY,
   case when STOCK_TYPE=3 then TAX_MONEY else 0 end as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_STOCKDATA
union all
select TENANT_ID,SHOP_ID,SALES_ID as ORDER_ID,GLIDE_NO,SALES_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,20+SALES_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   CALC_AMOUNT as SALE_AMT,NOTAX_MONEY as SALE_MNY,TAX_MONEY as SALE_TAX,CALC_MONEY+AGIO_MONEY as SALE_RTL,AGIO_MONEY as SALE_AGO,
   COST_MONEY as SALE_CST,
   PRF_MONEY as SALE_PRF,
   case when SALES_TYPE=3 then CALC_AMOUNT else 0 end as SALRT_AMT,
   case when SALES_TYPE=3 then NOTAX_MONEY else 0 end as SALRT_MNY,
   case when SALES_TYPE=3 then TAX_MONEY else 0 end as SALRT_TAX,
   case when SALES_TYPE=3 then COST_MONEY else 0 end as SALRT_CST,
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_SALESDATA
union all
select TENANT_ID,SHOP_ID,STOCK_ID as ORDER_ID,GLIDE_NO,STOCK_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,10+STOCK_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,COST_MONEY as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   CALC_AMOUNT as DBIN_AMT,RTL_MONEY as DBIN_RTL,COST_MONEY as DBIN_CST,
   0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_MOVEINDATA
union all
select TENANT_ID,SHOP_ID,SALES_ID as ORDER_ID,GLIDE_NO,SALES_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,20+SALES_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,round(round(COST_PRICE*CALC_AMOUNT,2)/AMOUNT,3) as APRICE,AMOUNT,round(COST_PRICE*CALC_AMOUNT,2) as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,   
   CALC_AMOUNT as DBOUT_AMT,RTL_MONEY as DBOUT_RTL,
   COST_MONEY as DBOUT_CST,
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_MOVEOUTDATA
union all
select TENANT_ID,SHOP_ID,CHANGE_ID as ORDER_ID,GLIDE_NO,CHANGE_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,30+cast(CHANGE_CODE as int) as ORDER_TYPE,' ' as CLIENT_ID,CREA_USER,
   round(round(COST_PRICE*CALC_AMOUNT,2)/AMOUNT,3) as APRICE,AMOUNT,round(COST_PRICE*CALC_AMOUNT,2) as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
PARM1_AMOUNT as CHANGE1_AMT,
PARM1_RTL as CHANGE1_RTL,
PARM1_MONEY as CHANGE1_CST,
PARM2_AMOUNT as CHANGE2_AMT,
PARM2_RTL as CHANGE2_RTL,
PARM2_MONEY as CHANGE2_CST,
PARM3_AMOUNT as CHANGE3_AMT,
PARM3_RTL as CHANGE3_RTL,
PARM3_MONEY as CHANGE3_CST,
PARM4_AMOUNT as CHANGE4_AMT,
PARM4_RTL as CHANGE4_RTL,
PARM4_MONEY as CHANGE4_CST,
PARM5_AMOUNT as CHANGE5_AMT,
PARM5_RTL as CHANGE5_RTL,
PARM5_MONEY as CHANGE5_CST
from VIW_CHANGEDATA; 

create view VIW_ACCT_DAYS
as
select 1 as FLAG,TENANT_ID,SHOP_ID,ACCOUNT_ID,PAY_DATE as CREA_DATE,0 as IN_MNY,PAY_MNY as OUT_MNY,PAY_MNY,0 as RECV_MNY,0 as POS_MNY,0 as TRN_IN_MNY,0 as TRN_OUT_MNY,0 as PUSH_MNY,0 as IORO_IN_MNY,0 as IORO_OUT_MNY from VIW_PAYDATA
union all
select 2 as FLAG,TENANT_ID,SHOP_ID,ACCOUNT_ID,RECV_DATE as CREA_DATE,RECV_MNY as IN_MNY,0 as OUT_MNY,0 as PAY_MNY,RECV_MNY,0 as POS_MNY,0 as TRN_IN_MNY,0 as TRN_OUT_MNY,0 as PUSH_MNY,0 as IORO_IN_MNY,0 as IORO_OUT_MNY from VIW_RECVDATA
union all
select 3 as FLAG,TENANT_ID,SHOP_ID,ACCOUNT_ID,IORO_DATE as CREA_DATE,IN_MONEY as IN_MNY,OUT_MONEY as OUT_MNY,0 as PAY_MNY,0 as RECV_MNY,0 as POS_MNY,0 as TRN_IN_MNY,0 as TRN_OUT_MNY,0 as PUSH_MNY,IN_MONEY as IORO_IN_MNY,OUT_MONEY as IORO_OUT_MNY from VIW_IORODATA
union all
select 4 as FLAG,TENANT_ID,SHOP_ID,IN_ACCOUNT_ID as ACCOUNT_ID,TRANS_DATE as CREA_DATE,TRANS_MNY as IN_MNY,0 as OUT_MNY,0 as PAY_MNY,0 as RECV_MNY,0 as POS_MNY,TRANS_MNY as TRN_IN_MNY,0 as TRN_OUT_MNY,0 as PUSH_MNY,0 as IORO_IN_MNY,0 as IORO_OUT_MNY from ACC_TRANSORDER
union all
select 5 as FLAG,TENANT_ID,SHOP_ID,OUT_ACCOUNT_ID as ACCOUNT_ID,TRANS_DATE as CREA_DATE,0 as IN_MNY,TRANS_MNY as OUT_MNY,0 as PAY_MNY,0 as RECV_MNY,0 as POS_MNY,0 as TRN_IN_MNY,TRANS_MNY as TRN_OUT_MNY,0 as PUSH_MNY,0 as IORO_IN_MNY,0 as IORO_OUT_MNY from ACC_TRANSORDER;

--调拨视图（包括出货单和入货单）
CREATE VIEW VIW_MOVEDATA
as 
 select
   A.TENANT_ID,A.SHOP_ID,A.STOCK_ID as MOVE_ID,B.STOCK_DATE as MOVE_Date,B.GLIDE_NO,A.BATCH_NO,A.LOCUS_NO,IS_PRESENT,A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.UNIT_ID,B.CREA_USER,
   B.GUIDE_USER as GUIDE_USER,B.CLIENT_ID as ASHOP_ID,A.APRICE as DBIN_PRC,A.AMOUNT as DBIN_AMT,A.CALC_MONEY as DBIN_CST,A.ORG_PRICE*A.AMOUNT as DBIN_RTL,0 as DBOUT_AMT,
   0 as DBOUT_PRC,0 as DBOUT_CST,0 as DBOUT_RTL,1 as MOVE_TYPE,B.CREA_DATE
 from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE=2 and B.COMM not in ('02','12')
union all 
 select                                                                       
   A.TENANT_ID,A.SHOP_ID,A.SALES_ID as MOVE_ID,B.SALES_DATE as MOVE_Date,B.GLIDE_NO,A.BATCH_NO,A.LOCUS_NO,IS_PRESENT,A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.UNIT_ID,B.CREA_USER,
   B.GUIDE_USER as GUIDE_USER,B.CLIENT_ID as ASHOP_ID,0 as DBIN_PRC,0 as DBIN_AMT,0 as DBIN_CST,0 as DBIN_RTL,A.AMOUNT as DBOUT_AMT,
   A.APRICE as DBOUT_PRC,round(A.CALC_AMOUNT*A.COST_PRICE,2) as DBOUT_CST,A.CALC_MONEY as DBOUT_RTL,2 as MOVE_TYPE,B.CREA_DATE
 from SAL_SALESDATA A,SAL_SALESORDER B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and B.SALES_TYPE=2 and B.COMM not in ('02','12');
 
--收银结账，包抱没有缴款登记的
create view VIW_RCKDATA
as 
select TENANT_ID,SHOP_ID,ROWS_ID as RECV_ID,CLSE_TYPE as GLIDE_NO,SHOP_ID as CLIENT_ID,CLSE_DATE as RECV_DATE,CREA_USER,CHK_DATE,CLSE_TYPE,
CLSE_MNY as RECV_MNY,PAY_A,PAY_B,PAY_C,PAY_D,PAY_E,PAY_F,PAY_G,PAY_H,PAY_I,PAY_J
from ACC_CLOSE_FORDAY
union all
select TENANT_ID,SHOP_ID,RECV_ID,GLIDE_NO,CLIENT_ID,RECV_DATE,RECV_USER as CREA_USER,CHK_DATE,'3' as CLSE_TYPE,
RECV_MNY,
case when PAYM_ID='A' then RECV_MNY else 0 end as PAY_A,
case when PAYM_ID='B' then RECV_MNY else 0 end as PAY_B,
case when PAYM_ID='C' then RECV_MNY else 0 end as PAY_C,
case when PAYM_ID='D' then RECV_MNY else 0 end as PAY_D,
case when PAYM_ID='E' then RECV_MNY else 0 end as PAY_E,
case when PAYM_ID='F' then RECV_MNY else 0 end as PAY_F,
case when PAYM_ID='G' then RECV_MNY else 0 end as PAY_G,
case when PAYM_ID='H' then RECV_MNY else 0 end as PAY_H,
case when PAYM_ID='I' then RECV_MNY else 0 end as PAY_I,
case when PAYM_ID='J' then RECV_MNY else 0 end as PAY_J
from VIW_RECVDATA where RECV_TYPE<>'4';

--客户收款报表：
create view VIW_RECVABLEDATA
as 
SELECT A.*,B.ABLE_DATE,B.ACCT_MNY,B.RECV_MNY as SETT_MNY,B.REVE_MNY,B.RECK_MNY,B.ACCT_INFO,B.SALES_ID,B.CREA_USER as ABLE_USER
FROM VIW_RECVDATA A
     INNER JOIN ACC_RECVABLE_INFO AS B ON A.TENANT_ID = B.TENANT_ID and A.ABLE_ID = B.ABLE_ID ;
     
--供应商付款报表：[时间差放]
CREATE VIEW VIW_PAYABLEDATA
as
select A.*,B.ABLE_DATE,B.ACCT_MNY,B.PAYM_MNY as SETT_MNY,B.REVE_MNY,B.RECK_MNY,B.ACCT_INFO,B.STOCK_ID,B.CREA_USER as ABLE_USER 
from VIW_PAYDATA A left outer join ACC_PAYABLE_INFO B 
  on A.TENANT_ID=B.TENANT_ID and A.ABLE_ID=B.ABLE_ID;     
