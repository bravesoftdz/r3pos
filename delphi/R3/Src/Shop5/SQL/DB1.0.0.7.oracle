--通讯ID号，调查内码
alter table MSC_INVEST_LIST add	COMM_ID varchar(50);

--扫码添加审核人
alter table STK_LOCUS_FORSTCK add	CHK_USER varchar(36);
alter table STK_LOCUS_FORSTCK add	CHK_DATE varchar(10);
alter table SAL_LOCUS_FORSALE add	CHK_USER varchar(36);
alter table SAL_LOCUS_FORSALE add	CHK_DATE varchar(10);
alter table STO_LOCUS_FORCHAG add	CHK_USER varchar(36);
alter table STO_LOCUS_FORCHAG add	CHK_DATE varchar(10);
--为每个仓库加合理库存
        --安全库存
alter table STO_STORAGE add	LOWER_AMOUNT decimal(18, 3);
        --上限库存
alter table STO_STORAGE add	UPPER_AMOUNT decimal(18, 3);
        --最低存销比
alter table STO_STORAGE add	LOWER_RATE decimal(18, 3);
        --最高存销比
alter table STO_STORAGE add	UPPER_RATE decimal(18, 3);
--答题结果
alter table MSC_INVEST_ANSWER add ANSWER_DISPLAY varchar(300);

update ca_module set ACTION_NAME='actfrmMessage' WHERE MODU_ID='91100001';

--客户商品销售账
CREATE TABLE RCK_C_GOODS_DAYS (
        --企业代码
	TENANT_ID NUMBER(9,0) NOT NULL ,
        --门店
	SHOP_ID varchar2(13) NOT NULL ,
        --部门
	DEPT_ID varchar2(12) NOT NULL ,
        --客户
	CLIENT_ID varchar2(36) NOT NULL ,
        --销售日期
	CREA_DATE NUMBER(9,0) NOT NULL ,
        --客户编码
	GODS_ID char (36)  NOT NULL ,
        --批号
	BATCH_NO varchar2(36) NOT NULL ,

--销售类台账	
        --销售数量<含退货>
	SALE_AMT decimal(18, 3) ,
        --可销售额<按零售价>
	SALE_RTL decimal(18, 3) ,
        --让利金额<销售让利>
	SALE_AGO decimal(18, 3) ,
        --销售金额<末税>
	SALE_MNY decimal(18, 3) ,
        --销项税额
	SALE_TAX decimal(18, 3) ,
        --销售成本
	SALE_CST decimal(18, 3) ,
        --成本单价<移动加权成本>
	COST_PRICE decimal(18, 6) ,
        --销售毛利
	SALE_PRF decimal(18, 3) ,
        --其中退货数量
	SALRT_AMT decimal(18, 3) ,
        --销售金额<末税>
	SALRT_MNY decimal(18, 3) ,
        --销项税额
	SALRT_TAX decimal(18, 3) ,
        --退货成本
	SALRT_CST decimal(18, 3) ,
        --通讯标志
	COMM varchar2(2) DEFAULT '00' NOT NULL,
        --时间戳 
  TIME_STAMP NUMBER(22,0) NOT NULL,
	CONSTRAINT PK_RCK_C_G_DAYS PRIMARY KEY   
	(
		TENANT_ID,SHOP_ID,DEPT_ID,CLIENT_ID,CREA_DATE,GODS_ID,BATCH_NO
	) 
);
CREATE INDEX IX_RCK_C_G_DAYS_TENANT_ID ON RCK_C_GOODS_DAYS(TENANT_ID);
CREATE INDEX IX_RCK_C_G_DAYS_TIME_STAMP ON RCK_C_GOODS_DAYS(TENANT_ID,TIME_STAMP);
CREATE INDEX IX_RCK_C_G_DAYS_CREA_DATE ON RCK_C_GOODS_DAYS(TENANT_ID,CREA_DATE);
CREATE INDEX IX_RCK_C_G_DAYS_GODS_ID ON RCK_C_GOODS_DAYS(TENANT_ID,GODS_ID);
CREATE INDEX IX_RCK_C_G_DAYS_CLIENT_ID ON RCK_C_GOODS_DAYS(TENANT_ID,CLIENT_ID);
CREATE INDEX IX_RCK_C_G_DAYS_DEPT_ID ON RCK_C_GOODS_DAYS(TENANT_ID,DEPT_ID);

--进货单视图<含退货>
drop VIEW VIW_STOCKDATA;
CREATE VIEW VIW_STOCKDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.DEPT_ID,B.STOCK_ID,B.INVOICE_FLAG,B.STOCK_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,B.STOCK_TYPE,B.CREA_DATE,
   A.CALC_AMOUNT,A.CALC_MONEY,A.AGIO_MONEY,A.AGIO_RATE,A.ORG_PRICE,A.APRICE,A.AMOUNT,B.TAX_RATE,A.ORG_PRICE*A.AMOUNT as STOCK_RTL,
   round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as TAX_MONEY,
   A.CALC_MONEY-round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as NOTAX_MONEY  
from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE in (1,3) and B.COMM not in ('02','12');

--调拨接收单视图
drop VIEW VIW_MOVEINDATA;
CREATE VIEW VIW_MOVEINDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.DEPT_ID,B.STOCK_ID,B.INVOICE_FLAG,B.STOCK_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,B.STOCK_TYPE,B.CREA_DATE,
   A.CALC_AMOUNT,A.CALC_MONEY as COST_MONEY,A.ORG_PRICE*A.AMOUNT as RTL_MONEY,A.AMOUNT,A.APRICE,A.ORG_PRICE
from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE in (2) and B.COMM not in ('02','12');

drop VIEW VIW_SALESDATA;
CREATE VIEW VIW_SALESDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.DEPT_ID,A.CREA_USER,A.CREA_DATE,A.INVOICE_FLAG,B.AGIO_RATE,A.GUIDE_USER,B.POLICY_TYPE,A.SALES_DATE,A.SALES_ID,B.BARTER_INTEGRAL,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.LOCUS_NO,A.INTEGRAL,B.HAS_INTEGRAL,A.SALES_TYPE,A.SALES_STYLE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as CALC_MONEY,B.ORG_PRICE,B.COST_PRICE,B.APRICE,B.AMOUNT,A.TAX_RATE,
  round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as TAX_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as NOTAX_MONEY,
  B.AGIO_MONEY,round(B.CALC_AMOUNT*B.COST_PRICE,2) as COST_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2)-round(B.CALC_AMOUNT*B.COST_PRICE,2) as PRF_MONEY
from SAL_SALESORDER A,SAL_SALESDATA B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and A.SALES_TYPE in (1,3,4) and A.COMM not in ('02','12');

--调拨出货单视图
drop VIEW VIW_MOVEOUTDATA;
CREATE VIEW VIW_MOVEOUTDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.DEPT_ID,A.CREA_USER,A.INVOICE_FLAG,B.AGIO_RATE,A.GUIDE_USER,B.POLICY_TYPE,A.SALES_DATE,A.SALES_ID,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.LOCUS_NO,A.SALES_TYPE,A.CREA_DATE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as RTL_MONEY,round(B.CALC_AMOUNT*B.COST_PRICE,2) as COST_MONEY,B.APRICE,B.ORG_PRICE,B.COST_PRICE,B.AMOUNT
from SAL_SALESORDER A,SAL_SALESDATA B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and A.SALES_TYPE in (2) and A.COMM not in ('02','12');

--进货订单视图
drop VIEW VIW_STKINDENTDATA;
CREATE VIEW VIW_STKINDENTDATA
as 
select
   B.TENANT_ID,B.SHOP_ID,B.INDE_ID,B.DEPT_ID,B.INVOICE_FLAG,B.INDE_DATE,B.CLIENT_ID,A.BATCH_NO,A.LOCUS_NO,B.GUIDE_USER,
   A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.IS_PRESENT,A.UNIT_ID,B.CREA_USER,B.GLIDE_NO,
   A.CALC_AMOUNT,A.CALC_MONEY,A.AGIO_MONEY,A.AGIO_RATE,A.ORG_PRICE,A.AMOUNT,
   round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as TAX_MONEY,
   A.CALC_MONEY-round(A.CALC_MONEY/(1+case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end)*case when B.INVOICE_FLAG='3' then B.TAX_RATE else 0 end,2) as NOTAX_MONEY
from STK_INDENTDATA A,STK_INDENTORDER B where A.TENANT_ID=B.TENANT_ID and A.INDE_ID=B.INDE_ID and B.COMM not in ('02','12');



--销售订单视图
drop VIEW VIW_SALINDENTDATA;
CREATE VIEW VIW_SALINDENTDATA
as
select 
  A.TENANT_ID,A.SHOP_ID,A.CLIENT_ID,A.DEPT_ID,A.CREA_USER,A.INVOICE_FLAG,A.GUIDE_USER,B.POLICY_TYPE,A.INDE_DATE,A.INDE_ID,B.BARTER_INTEGRAL,
  B.GODS_ID,B.PROPERTY_01,B.PROPERTY_02,B.IS_PRESENT,A.GLIDE_NO,B.UNIT_ID,B.BATCH_NO,B.HAS_INTEGRAL,A.SALES_STYLE, 
  B.CALC_AMOUNT as CALC_AMOUNT,B.CALC_MONEY as CALC_MONEY,B.AGIO_RATE,B.ORG_PRICE,B.AMOUNT,
  round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as TAX_MONEY,
  B.CALC_MONEY-round(B.CALC_MONEY/(1+case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end)*case when A.INVOICE_FLAG in ('2','3') then A.TAX_RATE else 0 end,2) as NOTAX_MONEY,
  B.AGIO_MONEY
from SAL_INDENTORDER A,SAL_INDENTDATA B where A.TENANT_ID=B.TENANT_ID and A.INDE_ID=B.INDE_ID and A.COMM not in ('02','12');

--调拨视图（包括出货单和入货单）
drop VIEW VIW_MOVEDATA;
CREATE VIEW VIW_MOVEDATA
as 
 select
   A.TENANT_ID,A.SHOP_ID,B.DEPT_ID,A.STOCK_ID as MOVE_ID,B.STOCK_DATE as MOVE_Date,B.GLIDE_NO,A.BATCH_NO,A.LOCUS_NO,IS_PRESENT,A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.UNIT_ID,B.CREA_USER,
   B.GUIDE_USER as GUIDE_USER,B.CLIENT_ID as ASHOP_ID,A.APRICE as DBIN_PRC,A.AMOUNT as DBIN_AMT,A.CALC_MONEY as DBIN_CST,A.ORG_PRICE*A.AMOUNT as DBIN_RTL,0 as DBOUT_AMT,
   0 as DBOUT_PRC,0 as DBOUT_CST,0 as DBOUT_RTL,1 as MOVE_TYPE,B.CREA_DATE
 from STK_STOCKDATA A,STK_STOCKORDER B where A.TENANT_ID=B.TENANT_ID and A.STOCK_ID=B.STOCK_ID and B.STOCK_TYPE=2 and B.COMM not in ('02','12')
union all 
 select                                                                       
   A.TENANT_ID,A.SHOP_ID,B.DEPT_ID,A.SALES_ID as MOVE_ID,B.SALES_DATE as MOVE_Date,B.GLIDE_NO,A.BATCH_NO,A.LOCUS_NO,IS_PRESENT,A.GODS_ID,A.PROPERTY_01,A.PROPERTY_02,A.UNIT_ID,B.CREA_USER,
   B.GUIDE_USER as GUIDE_USER,B.CLIENT_ID as ASHOP_ID,0 as DBIN_PRC,0 as DBIN_AMT,0 as DBIN_CST,0 as DBIN_RTL,A.AMOUNT as DBOUT_AMT,
   A.APRICE as DBOUT_PRC,round(A.CALC_AMOUNT*A.COST_PRICE,2) as DBOUT_CST,A.CALC_MONEY as DBOUT_RTL,2 as MOVE_TYPE,B.CREA_DATE
 from SAL_SALESDATA A,SAL_SALESORDER B where A.TENANT_ID=B.TENANT_ID and A.SALES_ID=B.SALES_ID and B.SALES_TYPE=2 and B.COMM not in ('02','12');

drop VIEW VIW_GOODS_DAYS;
create view VIW_GOODS_DAYS
as
select TENANT_ID,SHOP_ID,STOCK_ID as ORDER_ID,GLIDE_NO,STOCK_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,10+STOCK_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,CALC_MONEY,
   CALC_AMOUNT as STOCK_AMT,NOTAX_MONEY as STOCK_MNY,TAX_MONEY as STOCK_TAX,CALC_MONEY+AGIO_MONEY as STOCK_RTL,AGIO_MONEY as STOCK_AGO,
   case when STOCK_TYPE=3 then CALC_AMOUNT else 0 end as STKRT_AMT,
   case when STOCK_TYPE=3 then NOTAX_MONEY else 0 end as STKRT_MNY,
   case when STOCK_TYPE=3 then TAX_MONEY else 0 end as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_STOCKDATA
union all
select TENANT_ID,SHOP_ID,SALES_ID as ORDER_ID,GLIDE_NO,SALES_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,20+SALES_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   CALC_AMOUNT as SALE_AMT,NOTAX_MONEY as SALE_MNY,TAX_MONEY as SALE_TAX,CALC_MONEY+AGIO_MONEY as SALE_RTL,AGIO_MONEY as SALE_AGO,
   COST_MONEY as SALE_CST,
   PRF_MONEY as SALE_PRF,
   case when SALES_TYPE=3 then CALC_AMOUNT else 0 end as SALRT_AMT,
   case when SALES_TYPE=3 then NOTAX_MONEY else 0 end as SALRT_MNY,
   case when SALES_TYPE=3 then TAX_MONEY else 0 end as SALRT_TAX,
   case when SALES_TYPE=3 then COST_MONEY else 0 end as SALRT_CST,
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_SALESDATA
union all
select TENANT_ID,SHOP_ID,STOCK_ID as ORDER_ID,GLIDE_NO,STOCK_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,10+STOCK_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,APRICE,AMOUNT,COST_MONEY as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   CALC_AMOUNT as DBIN_AMT,RTL_MONEY as DBIN_RTL,COST_MONEY as DBIN_CST,
   0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_MOVEINDATA
union all
select TENANT_ID,SHOP_ID,SALES_ID as ORDER_ID,GLIDE_NO,SALES_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,20+SALES_TYPE as ORDER_TYPE,CLIENT_ID,CREA_USER,round(round(COST_PRICE*CALC_AMOUNT,2)/AMOUNT,3) as APRICE,AMOUNT,round(COST_PRICE*CALC_AMOUNT,2) as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,   
   CALC_AMOUNT as DBOUT_AMT,RTL_MONEY as DBOUT_RTL,
   COST_MONEY as DBOUT_CST,
   0 as CHANGE1_AMT,0 as CHANGE1_RTL,0 as CHANGE1_CST,   
   0 as CHANGE2_AMT,0 as CHANGE2_RTL,0 as CHANGE2_CST,   
   0 as CHANGE3_AMT,0 as CHANGE3_RTL,0 as CHANGE3_CST,   
   0 as CHANGE4_AMT,0 as CHANGE4_RTL,0 as CHANGE4_CST,   
   0 as CHANGE5_AMT,0 as CHANGE5_RTL,0 as CHANGE5_CST   
from VIW_MOVEOUTDATA
union all
select TENANT_ID,SHOP_ID,CHANGE_ID as ORDER_ID,GLIDE_NO,CHANGE_DATE as CREA_DATE,GODS_ID,BATCH_NO,PROPERTY_01,PROPERTY_02,LOCUS_NO,UNIT_ID,30+cast(CHANGE_CODE as int) as ORDER_TYPE,' ' as CLIENT_ID,CREA_USER,
   round(round(COST_PRICE*CALC_AMOUNT,2)/AMOUNT,3) as APRICE,AMOUNT,round(COST_PRICE*CALC_AMOUNT,2) as CALC_MONEY,
   0 as STOCK_AMT,0 as STOCK_MNY,0 as STOCK_TAX,0 as STOCK_RTL,0 as STOCK_AGO,0 as STKRT_AMT,0 as STKRT_MNY,0 as STKRT_TAX,   
   0 as SALE_AMT,0 as SALE_MNY,0 as SALE_TAX,0 as SALE_RTL,0 as SALE_AGO,0 as SALE_CST,0 as SALE_PRF,0 as SALRT_AMT,0 as SALRT_MNY,0 as SALRT_TAX,0 as SALRT_CST,   
   0 as DBIN_AMT,0 as DBIN_RTL,0 as DBIN_CST,0 as DBOUT_AMT,0 as DBOUT_RTL,0 as DBOUT_CST,   
PARM1_AMOUNT as CHANGE1_AMT,
PARM1_RTL as CHANGE1_RTL,
PARM1_MONEY as CHANGE1_CST,
PARM2_AMOUNT as CHANGE2_AMT,
PARM2_RTL as CHANGE2_RTL,
PARM2_MONEY as CHANGE2_CST,
PARM3_AMOUNT as CHANGE3_AMT,
PARM3_RTL as CHANGE3_RTL,
PARM3_MONEY as CHANGE3_CST,
PARM4_AMOUNT as CHANGE4_AMT,
PARM4_RTL as CHANGE4_RTL,
PARM4_MONEY as CHANGE4_CST,
PARM5_AMOUNT as CHANGE5_AMT,
PARM5_RTL as CHANGE5_RTL,
PARM5_MONEY as CHANGE5_CST
from VIW_CHANGEDATA; 

insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91500001',0,'投诉建议','009001005',1,'actfrmImpeach','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91500002',1,'查询','009001005002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91500003',2,'新增','009001005003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91500004',3,'打印','009001005004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91500005',4,'导出','009001005005',2,'#','#','00',5497000);

insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91500001',0,'投诉建议','009001005',1,'actfrmImpeach','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91500002',1,'查询','009001005002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91500003',2,'新增','009001005003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91500004',3,'打印','009001005004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91500005',4,'导出','009001005005',2,'#','#','00',5497000);

insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91500001',0,'投诉建议','009001005',1,'actfrmImpeach','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91500002',1,'查询','009001005002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91500003',2,'新增','009001005003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91500004',3,'打印','009001005004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91500005',4,'导出','009001005005',2,'#','#','00',5497000);


insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91600001',0,'问卷调查','009001006',1,'actfrmQuestionnaire','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91600002',1,'查询','009001006002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91600003',2,'发布','009001006003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91600004',3,'答题','009001006004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_RYC','91600005',4,'打印','009001006005',2,'#','#','00',5497000);


insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91600001',0,'问卷调查','009001006',1,'actfrmQuestionnaire','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91600002',1,'查询','009001006002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91600003',2,'发布','009001006003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91600004',3,'答题','009001006004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('E3_620','91600005',4,'打印','009001006005',2,'#','#','00',5497000);


insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91600001',0,'问卷调查','009001006',1,'actfrmQuestionnaire','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91600002',1,'查询','009001006002',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91600003',2,'发布','009001006003',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91600004',3,'答题','009001006004',2,'#','#','00',5497000);
insert into CA_MODULE(PROD_ID,MODU_ID,SEQNO,MODU_NAME,LEVEL_ID,MODU_TYPE,ACTION_NAME,ACTION_URL,COMM,TIME_STAMP)
values('R3_620','91600005',4,'打印','009001006005',2,'#','#','00',5497000);

